
services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/postgres_data
      -  ./backups:/backups
      - ./db/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql #Mount init.sql file here
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 35s
      retries: 5

  mysql:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backups:/backups
      - ./db/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongodb:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
     - "27017:27017"
    volumes:
      - mongo_data:/data/lib
      - ./backup:/backup
      - ./db/mongo/init.js:/docker-entrypoint-initdb.d/init.js

volumes:
  postgres_data:
  mysql_data:
  mongo_data:
